<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edwards Anonymous</title>
    <style>
        :root {
            --primary-bg: #f0f2f5;
            --card-bg: rgba(255, 255, 255, 0.9);
            --text-color: #1a1a1a;
            --accent-color: #6e48aa;
            --neon-effect: none;
            --input-bg: #ffffff;
            --button-bg: #6e48aa;
            --button-text: #ffffff;
        }

        .dark-theme {
            --primary-bg: #0f0f1a;
            --card-bg: rgba(30, 30, 50, 0.8);
            --text-color: #f0f0f0;
            --accent-color: #9d4edd;
            --neon-effect: 0 0 10px rgba(157, 78, 221, 0.7);
            --input-bg: #1e1e32;
            --button-bg: #9d4edd;
            --button-text: #ffffff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--primary-bg);
            color: var(--text-color);
            transition: all 0.3s ease;
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .dark-theme header {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .logo {
            font-size: 28px;
            font-weight: bold;
            color: var(--accent-color);
            text-decoration: none;
        }

        .nav-links {
            display: flex;
            gap: 20px;
        }

        .nav-links a {
            color: var(--text-color);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: var(--accent-color);
        }

        .theme-toggle-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-color);
        }

        .hero {
            text-align: center;
            padding: 50px 0;
        }

        .hero h1 {
            font-size: 48px;
            margin-bottom: 20px;
            background: linear-gradient(90deg, #6e48aa, #9d4edd);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .hero p {
            font-size: 18px;
            max-width: 700px;
            margin: 0 auto 30px;
            line-height: 1.6;
        }

        .cta-button {
            background-color: var(--button-bg);
            color: var(--button-text);
            border: none;
            padding: 12px 30px;
            border-radius: 30px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: var(--neon-effect);
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(110, 72, 170, 0.4);
        }

        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin: 50px 0;
        }

        .feature-card {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s;
            border: 1px solid rgba(110, 72, 170, 0.2);
        }

        .dark-theme .feature-card {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(110, 72, 170, 0.2);
            border-color: var(--accent-color);
        }

        .feature-icon {
            font-size: 40px;
            margin-bottom: 20px;
            color: var(--accent-color);
        }

        .feature-card h3 {
            margin-bottom: 15px;
            font-size: 22px;
        }

        .auth-container {
            max-width: 500px;
            margin: 50px auto;
            background: var(--card-bg);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .dark-theme .auth-container {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .auth-container h2 {
            text-align: center;
            margin-bottom: 30px;
            color: var(--accent-color);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border-radius: 8px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background-color: var(--input-bg);
            color: var(--text-color);
            font-size: 16px;
        }

        .dark-theme .form-group input {
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--accent-color);
        }

        .auth-button {
            width: 100%;
            padding: 12px;
            background-color: var(--button-bg);
            color: var(--button-text);
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
        }

        .auth-button:hover {
            background-color: #7d5cbf;
        }

        .auth-toggle {
            text-align: center;
            margin-top: 20px;
        }

        .auth-toggle a {
            color: var(--accent-color);
            text-decoration: none;
            font-weight: 500;
        }

        .dashboard {
            display: none;
        }

        .user-profile {
            display: flex;
            align-items: center;
            margin-bottom: 30px;
        }

        .profile-pic {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: var(--accent-color);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 30px;
            margin-right: 20px;
        }

        .profile-info h2 {
            margin-bottom: 5px;
        }

        .profile-info p {
            color: #777;
        }

        .dark-theme .profile-info p {
            color: #aaa;
        }

        .share-section {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .dark-theme .share-section {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .share-section h3 {
            margin-bottom: 15px;
        }

        .link-box {
            display: flex;
            margin-bottom: 20px;
        }

        .link-box input {
            flex: 1;
            padding: 12px 15px;
            border-radius: 8px 0 0 8px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background-color: var(--input-bg);
            color: var(--text-color);
        }

        .dark-theme .link-box input {
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .copy-btn {
            padding: 12px 20px;
            background-color: var(--button-bg);
            color: var(--button-text);
            border: none;
            border-radius: 0 8px 8px 0;
            cursor: pointer;
        }

        .social-share {
            display: flex;
            gap: 10px;
        }

        .social-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--button-bg);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
        }

        .social-btn:hover {
            transform: translateY(-2px);
        }

        .inbox-section {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .dark-theme .inbox-section {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .inbox-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .message-card {
            background: var(--input-bg);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            border-left: 4px solid var(--accent-color);
        }

        .message-meta {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 14px;
            color: #777;
        }

        .dark-theme .message-meta {
            color: #aaa;
        }

        .message-content {
            line-height: 1.6;
        }

        .chat-section {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }

        .dark-theme .chat-section {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .chat-header {
            margin-bottom: 20px;
        }

        .chat-messages {
            height: 400px;
            overflow-y: auto;
            margin-bottom: 20px;
            padding-right: 10px;
        }

        .chat-message {
            margin-bottom: 15px;
            padding: 15px;
            border-radius: 10px;
            background: var(--input-bg);
        }

        .chat-message-sender {
            font-weight: bold;
            margin-bottom: 5px;
            color: var(--accent-color);
        }

        .chat-input-area {
            display: flex;
            gap: 10px;
        }

        .chat-input {
            flex: 1;
            padding: 12px 15px;
            border-radius: 8px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            background-color: var(--input-bg);
            color: var(--text-color);
        }

        .dark-theme .chat-input {
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .send-btn {
            padding: 12px 20px;
            background-color: var(--button-bg);
            color: var(--button-text);
            border: none;
            border-radius: 8px;
            cursor: pointer;
        }

        .admin-panel {
            display: none;
            background: var(--card-bg);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .dark-theme .admin-panel {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .admin-header {
            margin-bottom: 30px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: var(--input-bg);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }

        .stat-number {
            font-size: 32px;
            font-weight: bold;
            color: var(--accent-color);
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 14px;
            color: #777;
        }

        .dark-theme .stat-label {
            color: #aaa;
        }

        .admin-section {
            margin-bottom: 30px;
        }

        .admin-section h3 {
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .dark-theme .admin-section h3 {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .user-list {
            list-style: none;
        }

        .user-item {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .dark-theme .user-item {
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .user-actions button {
            padding: 5px 10px;
            margin-left: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .delete-btn {
            background-color: #ff4d4d;
            color: white;
        }

        .developer-contact {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .contact-btn {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #25D366;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            text-decoration: none;
        }

        @media (max-width: 768px) {
            .hero h1 {
                font-size: 36px;
            }
            
            .features {
                grid-template-columns: 1fr;
            }
            
            .link-box {
                flex-direction: column;
            }
            
            .link-box input {
                border-radius: 8px;
                margin-bottom: 10px;
            }
            
            .copy-btn {
                border-radius: 8px;
            }
            
            .chat-input-area {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <a href="#" class="logo">Edwards Anonymous</a>
            <div class="nav-links">
                <a href="#" id="home-link">Home</a>
                <a href="#" id="dashboard-link">Dashboard</a>
                <a href="#" id="chat-link">Community Chat</a>
                <a href="#" id="admin-link" style="display: none;">Admin</a>
            </div>
            <button class="theme-toggle-btn" id="theme-toggle">🌙</button>
        </header>

        <main id="main-content">
            <!-- Home Section -->
            <section id="home-section">
                <div class="hero">
                    <h1>Send & Receive Anonymous Messages</h1>
                    <p>The most advanced anonymous messaging platform with real-time community chat, media sharing, and complete privacy.</p>
                    <button class="cta-button" id="get-started-btn">Get Started</button>
                </div>

                <div class="features">
                    <div class="feature-card">
                        <div class="feature-icon">🔒</div>
                        <h3>Complete Anonymity</h3>
                        <p>Send and receive messages without revealing your identity. Your privacy is our top priority.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">💬</div>
                        <h3>Community Chat</h3>
                        <p>Join real-time anonymous discussions with people from around the world.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">📱</div>
                        <h3>Media Sharing</h3>
                        <p>Share images, videos, and voice messages in your conversations.</p>
                    </div>
                </div>
            </section>

            <!-- Auth Section -->
            <section id="auth-section" style="display: none;">
                <div class="auth-container" id="login-container">
                    <h2>Login to Your Account</h2>
                    <div class="form-group">
                        <label for="login-username">Username</label>
                        <input type="text" id="login-username" placeholder="Enter your username">
                    </div>
                    <div class="form-group">
                        <label for="login-password">Password</label>
                        <input type="password" id="login-password" placeholder="Enter your password">
                    </div>
                    <button class="auth-button" id="login-btn">Login</button>
                    <div class="auth-toggle">
                        Don't have an account? <a href="#" id="show-register">Register</a>
                    </div>
                </div>

                <div class="auth-container" id="register-container" style="display: none;">
                    <h2>Create New Account</h2>
                    <div class="form-group">
                        <label for="register-username">Username</label>
                        <input type="text" id="register-username" placeholder="Choose a username">
                    </div>
                    <div class="form-group">
                        <label for="register-password">Password</label>
                        <input type="password" id="register-password" placeholder="Create a password">
                    </div>
                    <div class="form-group">
                        <label for="register-confirm">Confirm Password</label>
                        <input type="password" id="register-confirm" placeholder="Confirm your password">
                    </div>
                    <button class="auth-button" id="register-btn">Register</button>
                    <div class="auth-toggle">
                        Already have an account? <a href="#" id="show-login">Login</a>
                    </div>
                </div>
            </section>

            <!-- Dashboard Section -->
            <section id="dashboard-section" class="dashboard" style="display: none;">
                <div class="user-profile">
                    <div class="profile-pic" id="profile-pic">U</div>
                    <div class="profile-info">
                        <h2 id="profile-username">Username</h2>
                        <p>Your anonymous messaging dashboard</p>
                    </div>
                </div>

                <div class="share-section">
                    <h3>Your Anonymous Link</h3>
                    <div class="link-box">
                        <input type="text" id="user-link" readonly>
                        <button class="copy-btn" id="copy-link-btn">Copy</button>
                    </div>
                    <p>Share this link to receive anonymous messages</p>
                    <h4>Share to:</h4>
                    <div class="social-share">
                        <div class="social-btn" id="share-twitter">𝕏</div>
                        <div class="social-btn" id="share-whatsapp">📱</div>
                        <div class="social-btn" id="share-instagram">📸</div>
                        <div class="social-btn" id="share-facebook">f</div>
                    </div>
                </div>

                <div class="inbox-section">
                    <div class="inbox-header">
                        <h3>Your Messages</h3>
                        <button class="cta-button" id="refresh-inbox-btn">Refresh</button>
                    </div>
                    <div id="inbox-messages">
                        <!-- Messages will appear here -->
                        <div class="message-card">
                            <div class="message-meta">
                                <span>Anonymous</span>
                                <span>Just now</span>
                            </div>
                            <div class="message-content">
                                Welcome to Edwards Anonymous! Start sharing your link to receive messages.
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Chat Section -->
            <section id="chat-section" class="dashboard" style="display: none;">
                <div class="chat-section">
                    <div class="chat-header">
                        <h2>Anonymous Community Chat</h2>
                        <p>Chat with people from around the world while staying completely anonymous</p>
                    </div>
                    <div class="chat-messages" id="chat-messages">
                        <div class="chat-message">
                            <div class="chat-message-sender">AnonymousUser123</div>
                            <div class="chat-message-content">Welcome to the community chat! Feel free to say anything anonymously.</div>
                        </div>
                    </div>
                    <div class="chat-input-area">
                        <input type="text" class="chat-input" id="chat-input" placeholder="Type your message...">
                        <button class="send-btn" id="send-chat-btn">Send</button>
                    </div>
                    <div style="margin-top: 20px; display: flex; gap: 10px;">
                        <button class="cta-button" id="upload-media-btn">Upload Media</button>
                        <button class="cta-button" id="record-voice-btn">Record Voice</button>
                    </div>
                </div>
            </section>

            <!-- Admin Panel -->
            <section id="admin-section" class="admin-panel" style="display: none;">
                <div class="admin-header">
                    <h2>Admin Dashboard</h2>
                    <p>Welcome back, Administrator</p>
                </div>

                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number" id="total-users">0</div>
                        <div class="stat-label">Total Users</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="total-messages">0</div>
                        <div class="stat-label">Total Messages</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="active-chats">0</div>
                        <div class="stat-label">Active Chats</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="reports">0</div>
                        <div class="stat-label">Reports</div>
                    </div>
                </div>

                <div class="admin-section">
                    <h3>User Management</h3>
                    <ul class="user-list" id="user-list">
                        <!-- Users will appear here -->
                    </ul>
                </div>

                <div class="admin-section">
                    <h3>System Settings</h3>
                    <button class="cta-button" id="export-data-btn">Export All Data</button>
                    <button class="cta-button" id="clear-chat-btn" style="background-color: #ff4d4d; margin-left: 10px;">Clear Community Chat</button>
                </div>
            </section>
        </main>
    </div>

    <div class="developer-contact">
        <a href="https://wa.me/2347019706826" class="contact-btn" target="_blank">📱</a>
    </div>

    <script>
        // DOM Elements
        const themeToggle = document.getElementById('theme-toggle');
        const homeLink = document.getElementById('home-link');
        const dashboardLink = document.getElementById('dashboard-link');
        const chatLink = document.getElementById('chat-link');
        const adminLink = document.getElementById('admin-link');
        const getStartedBtn = document.getElementById('get-started-btn');
        const homeSection = document.getElementById('home-section');
        const authSection = document.getElementById('auth-section');
        const dashboardSection = document.getElementById('dashboard-section');
        const chatSection = document.getElementById('chat-section');
        const adminSection = document.getElementById('admin-section');
        const showRegister = document.getElementById('show-register');
        const showLogin = document.getElementById('show-login');
        const loginContainer = document.getElementById('login-container');
        const registerContainer = document.getElementById('register-container');
        const loginBtn = document.getElementById('login-btn');
        const registerBtn = document.getElementById('register-btn');
        const profilePic = document.getElementById('profile-pic');
        const profileUsername = document.getElementById('profile-username');
        const userLink = document.getElementById('user-link');
        const copyLinkBtn = document.getElementById('copy-link-btn');
        const inboxMessages = document.getElementById('inbox-messages');
        const refreshInboxBtn = document.getElementById('refresh-inbox-btn');
        const chatMessages = document.getElementById('chat-messages');
        const chatInput = document.getElementById('chat-input');
        const sendChatBtn = document.getElementById('send-chat-btn');
        const uploadMediaBtn = document.getElementById('upload-media-btn');
        const recordVoiceBtn = document.getElementById('record-voice-btn');
        const totalUsers = document.getElementById('total-users');
        const totalMessages = document.getElementById('total-messages');
        const activeChats = document.getElementById('active-chats');
        const reports = document.getElementById('reports');
        const userList = document.getElementById('user-list');
        const exportDataBtn = document.getElementById('export-data-btn');
        const clearChatBtn = document.getElementById('clear-chat-btn');
        const shareTwitter = document.getElementById('share-twitter');
        const shareWhatsapp = document.getElementById('share-whatsapp');
        const shareInstagram = document.getElementById('share-instagram');
        const shareFacebook = document.getElementById('share-facebook');

        // App State
        let currentUser = null;
        let isAdmin = false;
        let messages = [];
        let chatHistory = [];
        let users = [];
        let darkMode = false;

        // Initialize the app
        function init() {
            // Check for saved user
            const savedUser = localStorage.getItem('anonymousUser');
            if (savedUser) {
                currentUser = JSON.parse(savedUser);
                if (currentUser.username === 'Adegboyega' && currentUser.password === 'ibukun') {
                    isAdmin = true;
                    adminLink.style.display = 'block';
                }
                showDashboard();
            }

            // Set up event listeners
            setupEventListeners();
            
            // Generate a default user link
            updateUserLink();
            
            // Load sample data
            loadSampleData();
        }

        // Set up all event listeners
        function setupEventListeners() {
            // Theme toggle
            themeToggle.addEventListener('click', toggleTheme);
            
            // Navigation
            homeLink.addEventListener('click', (e) => {
                e.preventDefault();
                showHome();
            });
            
            dashboardLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentUser) {
                    showDashboard();
                } else {
                    showAuth('login');
                }
            });
            
            chatLink.addEventListener('click', (e) => {
                e.preventDefault();
                if (currentUser) {
                    showChat();
                } else {
                    showAuth('login');
                }
            });
            
            adminLink.addEventListener('click', (e) => {
                e.preventDefault();
                showAdmin();
            });
            
            // Auth
            getStartedBtn.addEventListener('click', () => showAuth('login'));
            showRegister.addEventListener('click', (e) => {
                e.preventDefault();
                showAuth('register');
            });
            showLogin.addEventListener('click', (e) => {
                e.preventDefault();
                showAuth('login');
            });
            loginBtn.addEventListener('click', handleLogin);
            registerBtn.addEventListener('click', handleRegister);
            
            // Dashboard
            copyLinkBtn.addEventListener('click', copyUserLink);
            refreshInboxBtn.addEventListener('click', refreshInbox);
            
            // Chat
            sendChatBtn.addEventListener('click', sendChatMessage);
            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    sendChatMessage();
                }
            });
            uploadMediaBtn.addEventListener('click', () => alert('Media upload would be implemented in a full version'));
            recordVoiceBtn.addEventListener('click', () => alert('Voice recording would be implemented in a full version'));
            
            // Admin
            exportDataBtn.addEventListener('click', exportData);
            clearChatBtn.addEventListener('click', clearChat);
            
            // Social share
            shareTwitter.addEventListener('click', shareToTwitter);
            shareWhatsapp.addEventListener('click', shareToWhatsapp);
            shareInstagram.addEventListener('click', shareToInstagram);
            shareFacebook.addEventListener('click', shareToFacebook);
        }

        // Theme functions
        function toggleTheme() {
            darkMode = !darkMode;
            document.body.classList.toggle('dark-theme');
            themeToggle.textContent = darkMode ? '☀️' : '🌙';
            localStorage.setItem('darkMode', darkMode);
        }

        // Navigation functions
        function showHome() {
            homeSection.style.display = 'block';
            authSection.style.display = 'none';
            dashboardSection.style.display = 'none';
            chatSection.style.display = 'none';
            adminSection.style.display = 'none';
        }

        function showAuth(type) {
            homeSection.style.display = 'none';
            authSection.style.display = 'block';
            dashboardSection.style.display = 'none';
            chatSection.style.display = 'none';
            adminSection.style.display = 'none';
            
            if (type === 'login') {
                loginContainer.style.display = 'block';
                registerContainer.style.display = 'none';
            } else {
                loginContainer.style.display = 'none';
                registerContainer.style.display = 'block';
            }
        }

        function showDashboard() {
            homeSection.style.display = 'none';
            authSection.style.display = 'none';
            dashboardSection.style.display = 'block';
            chatSection.style.display = 'none';
            adminSection.style.display = 'none';
            
            if (currentUser) {
                profileUsername.textContent = currentUser.username;
                profilePic.textContent = currentUser.username.charAt(0).toUpperCase();
                updateUserLink();
                loadMessages();
            }
        }

        function showChat() {
            homeSection.style.display = 'none';
            authSection.style.display = 'none';
            dashboardSection.style.display = 'none';
            chatSection.style.display = 'block';
            adminSection.style.display = 'none';
            
            loadChatHistory();
        }

        function showAdmin() {
            homeSection.style.display = 'none';
            authSection.style.display = 'none';
            dashboardSection.style.display = 'none';
            chatSection.style.display = 'none';
            adminSection.style.display = 'block';
            
            loadAdminData();
        }

        // Auth functions
        function handleLogin() {
            const username = document.getElementById('login-username').value;
            const password = document.getElementById('login-password').value;
            
            if (!username || !password) {
                alert('Please enter both username and password');
                return;
            }
            
            // Check for admin login
            if (username === 'Adegboyega' && password === 'ibukun') {
                currentUser = { username, password };
                isAdmin = true;
                adminLink.style.display = 'block';
                localStorage.setItem('anonymousUser', JSON.stringify(currentUser));
                showAdmin();
                return;
            }
            
            // In a real app, this would check against a database
            const users = JSON.parse(localStorage.getItem('anonymousUsers')) || [];
            const user = users.find(u => u.username === username && u.password === password);
            
            if (user) {
                currentUser = user;
                localStorage.setItem('anonymousUser', JSON.stringify(currentUser));
                showDashboard();
            } else {
                alert('Invalid username or password');
            }
        }

        function handleRegister() {
            const username = document.getElementById('register-username').value;
            const password = document.getElementById('register-password').value;
            const confirm = document.getElementById('register-confirm').value;
            
            if (!username || !password || !confirm) {
                alert('Please fill in all fields');
                return;
            }
            
            if (password !== confirm) {
                alert('Passwords do not match');
                return;
            }
            
            if (password.length < 6) {
                alert('Password must be at least 6 characters');
                return;
            }
            
            // In a real app, this would check against a database
            let users = JSON.parse(localStorage.getItem('anonymousUsers')) || [];
            
            if (users.some(u => u.username === username)) {
                alert('Username already exists');
                return;
            }
            
            const newUser = { username, password };
            users.push(newUser);
            localStorage.setItem('anonymousUsers', JSON.stringify(users));
            
            currentUser = newUser;
            localStorage.setItem('anonymousUser', JSON.stringify(currentUser));
            showDashboard();
        }

        // Dashboard functions
        function updateUserLink() {
            if (currentUser) {
                // In a real app, this would be a proper URL
                userLink.value = `${window.location.href.split('#')[0]}#/user/${currentUser.username}`;
            }
        }

        function copyUserLink() {
            userLink.select();
            document.execCommand('copy');
            alert('Link copied to clipboard!');
        }

        function loadMessages() {
            // In a real app, this would fetch from a database
            const userMessages = messages.filter(m => m.recipient === currentUser.username);
            
            inboxMessages.innerHTML = '';
            
            if (userMessages.length === 0) {
                inboxMessages.innerHTML = `
                    <div class="message-card">
                        <div class="message-meta">
                            <span>System</span>
                            <span>Just now</span>
                        </div>
                        <div class="message-content">
                            You don't have any messages yet. Share your link to start receiving messages!
                        </div>
                    </div>
                `;
                return;
            }
            
            userMessages.forEach(msg => {
                const messageEl = document.createElement('div');
                messageEl.className = 'message-card';
                messageEl.innerHTML = `
                    <div class="message-meta">
                        <span>${msg.sender || 'Anonymous'}</span>
                        <span>${formatTime(msg.timestamp)}</span>
                    </div>
                    <div class="message-content">
                        ${msg.content}
                    </div>
                `;
                inboxMessages.appendChild(messageEl);
            });
        }

        function refreshInbox() {
            loadMessages();
            alert('Inbox refreshed!');
        }

        // Chat functions
        function loadChatHistory() {
            chatMessages.innerHTML = '';
            
            chatHistory.forEach(msg => {
                const messageEl = document.createElement('div');
                messageEl.className = 'chat-message';
                messageEl.innerHTML = `
                    <div class="chat-message-sender">${msg.sender}</div>
                    <div class="chat-message-content">${msg.content}</div>
                `;
                chatMessages.appendChild(messageEl);
            });
            
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function sendChatMessage() {
            const content = chatInput.value.trim();
            if (!content) return;
            
            const newMessage = {
                sender: `AnonymousUser${Math.floor(1000 + Math.random() * 9000)}`,
                content,
                timestamp: Date.now()
            };
            
            chatHistory.push(newMessage);
            localStorage.setItem('anonymousChatHistory', JSON.stringify(chatHistory));
            
            chatInput.value = '';
            loadChatHistory();
        }

        // Admin functions
        function loadAdminData() {
            // In a real app, this would fetch from a database
            totalUsers.textContent = users.length;
            totalMessages.textContent = messages.length;
            activeChats.textContent = chatHistory.length;
            reports.textContent = '0';
            
            // Load user list
            userList.innerHTML = '';
            users.forEach(user => {
                const userEl = document.createElement('li');
                userEl.className = 'user-item';
                userEl.innerHTML = `
                    <span>${user.username}</span>
                    <div class="user-actions">
                        <button class="delete-btn">Delete</button>
                    </div>
                `;
                userList.appendChild(userEl);
            });
        }

        function exportData() {
            const data = {
                users,
                messages,
                chatHistory
            };
            
            const dataStr = JSON.stringify(data, null, 2);
            const blob = new Blob([dataStr], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            
            const a = document.createElement('a');
            a.href = url;
            a.download = 'anonymous-site-data.json';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }

        function clearChat() {
            if (confirm('Are you sure you want to clear all chat history? This cannot be undone.')) {
                chatHistory = [];
                localStorage.setItem('anonymousChatHistory', JSON.stringify(chatHistory));
                loadChatHistory();
                alert('Chat history cleared');
            }
        }

        // Social share functions
        function shareToTwitter() {
            const text = `Send me anonymous messages on Edwards Anonymous: ${userLink.value}`;
            const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;
            window.open(url, '_blank');
        }

        function shareToWhatsapp() {
            const text = `Send me anonymous messages on Edwards Anonymous: ${userLink.value}`;
            const url = `https://wa.me/?text=${encodeURIComponent(text)}`;
            window.open(url, '_blank');
        }

        function shareToInstagram() {
            alert('Instagram sharing would be implemented in a full version');
        }

        function shareToFacebook() {
            const url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(userLink.value)}`;
            window.open(url, '_blank');
        }

        // Helper functions
        function formatTime(timestamp) {
            const date = new Date(timestamp);
            return date.toLocaleString();
        }

        function loadSampleData() {
            // Load or initialize sample data
            users = JSON.parse(localStorage.getItem('anonymousUsers')) || [];
            messages = JSON.parse(localStorage.getItem('anonymousMessages')) || [
                {
                    sender: 'System',
                    recipient: 'Adegboyega',
                    content: 'Welcome to Edwards Anonymous! Start sharing your link to receive messages.',
                    timestamp: Date.now()
                }
            ];
            chatHistory = JSON.parse(localStorage.getItem('anonymousChatHistory')) || [
                {
                    sender: 'AnonymousUser123',
                    content: 'Welcome to the community chat! Feel free to say anything anonymously.',
                    timestamp: Date.now() - 3600000
                },
                {
                    sender: 'AnonymousUser456',
                    content: 'This is a great platform for honest conversations.',
                    timestamp: Date.now() - 1800000
                }
            ];
            
            // Save back to localStorage
            localStorage.setItem('anonymousMessages', JSON.stringify(messages));
            localStorage.setItem('anonymousChatHistory', JSON.stringify(chatHistory));
            
            // Check for saved theme
            const savedDarkMode = localStorage.getItem('darkMode') === 'true';
            if (savedDarkMode) {
                darkMode = true;
                document.body.classList.add('dark-theme');
                themeToggle.textContent = '☀️';
            }
        }

        // Initialize the app
        init();
    </script>
</body>
</html>